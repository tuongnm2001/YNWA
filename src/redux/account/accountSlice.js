import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';

const initialState = {
    isAuthenticated: false,
    isLoading: true,
    user: {
        email: '',
        phone: '',
        fullName: '',
        role: '',
        avatar: '',
        id: ''
    },
    tempAvatar: ''
};


export const accountSlice = createSlice({
    name: 'account',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        doLoginAction: (state, action) => {
            state.isAuthenticated = true;
            state.isLoading = false;
            state.user = action.payload
        },
        doGetAccountAction: (state, action) => {
            state.isAuthenticated = true;
            state.isLoading = false;
            state.user = action.payload.user
        },
        doLogout: (state, action) => {
            localStorage.removeItem('access_token');
            state.isAuthenticated = false;
            state.user = {
                email: '',
                phone: '',
                fullName: '',
                role: '',
                avatar: '',
                id: ''
            }
        },

        doUpdateUserInfoAction: (state, action) => {
            state.user.avatar = action.payload.avatar
            state.user.fullName = action.payload.fullName
            state.user.phone = action.payload.phone
        },

        doUploadAvatarAction: (state, action) => {
            console.log(action);
            state.tempAvatar = action.payload.avatar
        }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) => {
        builder

    },
});

export const { doLoginAction,
    doGetAccountAction, doLogout, doUploadAvatarAction, doUpdateUserInfoAction
} = accountSlice.actions;

export default accountSlice.reducer;
